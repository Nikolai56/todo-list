{"version":3,"sources":["actions/index.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/idCounter.js","reducers/index.js","containers/AddTodo.js","components/Header/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","dnd/ItemTypes.js","dnd/Dustbin.js","dnd/SortedCard.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","dnd/DnDBoard.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["VisibilityFilters","ActionTypes","ADD_TODO","TOGGLE_TODO","SORT_TODO","REMOVE_TODO","todos","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","id","text","completed","map","todo","objectSpread","dragIndex","hoverIndex","dragCard","update","$splice","filter","visibilityFilter","idCounter","combineReducers","connect","_ref","dispatch","input","react_default","a","createElement","onSubmit","e","preventDefault","value","trim","autoFocus","ref","node","Container","styled","header","_templateObject","H1","h1","_templateObject2","Header","props","children","style","src","logo","className","alt","Link","active","onClick","disabled","marginLeft","ownProps","Footer","FilterLink","ItemTypes","height","marginTop","color","padding","textAlign","cardTarget","drop","name","hover","monitor","component","getClientOffset","findDOMNode","getBoundingClientRect","isOver","shallow","canDrop","Dustbin","_this$props","this","isActive","backgroundColor","connectDropTarget","react","React","DropTarget","dropTarget","border","marginBottom","cursor","cardSource","beginDrag","index","endDrag","console","log","didDrop","item","getItem","dropResult","getDropResult","onDropToDustbin","hoverBoundingRect","hoverMiddleY","bottom","top","hoverClientY","y","moveCard","Card","isDragging","connectDragSource","opacity","DragSource","dragSource","Todo","SortedCard","textDecoration","TodoList","toggleTodo","removeTodo","sortCard","i","components_Todo","assign","key","getVisibleTodos","t","Error","DnDBoard","lib","backend","HTML5Backend","VisibleTodoList","dnd_Dustbin","div","App_templateObject","App","App_Container","components_Header","containers_AddTodo","components_Footer","PureComponent","Boolean","window","location","hostname","match","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","es","integration_react","loading","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3d2fc2f2.chunk.js","sourcesContent":["export const addTodo = (id, text) => ({\n    type: 'ADD_TODO',\n    id: id,\n    text\n});\n\nexport const setVisibilityFilter = filter => ({\n    type: 'SET_VISIBILITY_FILTER',\n    filter\n});\n\nexport const toggleTodo = id => ({\n    type: 'TOGGLE_TODO',\n    id\n});\n\nexport const sortCard = (dragIndex, hoverIndex) => ({\n    type: ActionTypes.SORT_TODO,\n    dragIndex,\n    hoverIndex\n});\n\nexport const removeTodo = id => ({\n    type: 'REMOVE_TODO',\n    id\n});\n\nexport const VisibilityFilters = {\n    SHOW_ALL: 'SHOW_ALL',\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\n};\n\nexport const ActionTypes = {\n    ADD_TODO: 'ADD_TODO',\n    TOGGLE_TODO: 'TOGGLE_TODO',\n    SORT_TODO: 'SORT_TODO',\n    REMOVE_TODO: 'REMOVE_TODO',\n};\n","import update from 'immutability-helper';\nimport { ActionTypes } from '../actions';\n\nconst todos = (state = [], action) => {\n    switch (action.type) {\n    case ActionTypes.ADD_TODO:\n        return [\n            ...state,\n            {\n                id: action.id,\n                text: action.text,\n                completed: false\n            }\n        ];\n    case ActionTypes.TOGGLE_TODO:\n        return state.map(\n            todo =>\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n        );\n    case ActionTypes.SORT_TODO: {\n        const {dragIndex, hoverIndex} = action;\n        const dragCard = state[dragIndex];\n        return update(state, {\n            $splice: [[dragIndex, 1], [hoverIndex, 0, dragCard]],\n        });\n    }\n    case ActionTypes.REMOVE_TODO:\n        return state.filter(todo => todo.id !== action.id);\n    default:\n        return state;\n    }\n};\n\nexport default todos;\n","import { VisibilityFilters } from '../actions';\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n    switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n        return action.filter;\n    default:\n        return state;\n    }\n};\n\nexport default visibilityFilter;\n","const idCounter = (state = 1, action) => {\n    switch (action.type) {\n    case 'ADD_TODO':\n        return state + 1;\n    default:\n        return state;\n    }\n};\n\nexport default idCounter;\n","import { combineReducers } from 'redux';\nimport todos from './todos';\nimport visibilityFilter from './visibilityFilter';\nimport idCounter from './idCounter';\n\nexport default combineReducers({\n    todos,\n    visibilityFilter,\n    idCounter\n});\n","// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../actions';\n\ntype Action = {+type: string};\ntype Dispatch = (action: Action) => any\ntype Props = {\n    dispatch: Dispatch,\n    idCounter: number\n};\n\nconst AddTodo = ({ idCounter, dispatch }:Props) => {\n    let input = {};\n\n    return (\n        <div>\n            <form\n                onSubmit={e => {\n                    e.preventDefault();\n                    if (!input.value.trim()) {\n                        return;\n                    }\n                    dispatch(addTodo(idCounter, input.value));\n                    input.value = '';\n                }}\n            >\n                <input autoFocus ref={node => (input = node)} />\n                <button type=\"submit\">Add Todo</button>\n            </form>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return { idCounter: state.idCounter };\n};\n\nexport default connect(mapStateToProps)(AddTodo);\n","// @flow\nimport React from 'react';\nimport styled from 'styled-components';\nimport logo from '../../logo.svg';\n\ntype Child = string | Object;\ntype Props = {\n    children: ?Child,\n    name: ?string,\n    style: ?Object,\n    label: ?string\n};\n\nconst Header = (props:Props) => {\n    const {children, style} = props;\n    return (\n        <Container style={style}>\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            {children}\n            <H1>Todo List</H1>\n        </Container>\n    );\n};\n\nconst Container = styled.header`\n  background-color: #282c34;\n    display: flex;\n    flex-direction: row;\n    height: 50px;\n`;\n\nconst H1 = styled.h1`\n    color: #61dafb;\n    margin: 0;\n    line-height: 50px;\n`;\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Link = ({ active, children, onClick }) => (\n    <button\n        onClick={onClick}\n        disabled={active}\n        style={{\n            marginLeft: '4px'\n        }}\n    >\n        {children}\n    </button>\n);\n\nLink.propTypes = {\n    active: PropTypes.bool.isRequired,\n    children: PropTypes.node.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nexport default Link;\n","import { connect } from 'react-redux';\nimport { setVisibilityFilter } from '../actions';\nimport Link from '../components/Link';\n\nconst mapStateToProps = (state, ownProps) => ({\n    active: ownProps.filter === state.visibilityFilter\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Link);\n","import React from 'react';\nimport FilterLink from '../containers/FilterLink';\nimport { VisibilityFilters } from '../actions';\n\nconst Footer = () => (\n    <div>\n        <span>Show: </span>\n        <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\n        <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\n        <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\n    </div>\n);\n\nexport default Footer;\n","export default {\n    BOX: 'box',\n    CARD: 'card',\n};\n","import * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport {\n    DragSource,\n    DropTarget,\n    ConnectDropTarget,\n    ConnectDragSource,\n    DropTargetMonitor,\n    DropTargetConnector,\n    DragSourceConnector,\n    DragSourceMonitor,\n} from 'react-dnd';\nimport ItemTypes from './ItemTypes';\n\nconst style: React.CSSProperties = {\n    height: 120,\n    marginTop: 'auto',\n    color: 'white',\n    padding: '1rem',\n    textAlign: 'center',\n};\n\nconst cardTarget = {\n    drop() {\n        return { name: 'Dustbin' };\n    },\n    hover(props, monitor: DropTargetMonitor, component) {\n        // This is fired very often and lets you perform side effects\n        // in response to the hover. You can't handle enter and leave\n        // here—if you need them, put monitor.isOver() into collect() so you\n        // can just use componentDidUpdate() to handle enter/leave.\n\n        // You can access the coordinates if you need them\n        const clientOffset = monitor.getClientOffset();\n        const componentRect = findDOMNode(component).getBoundingClientRect();\n\n        // You can check whether we're over a nested drop target\n        const isJustOverThisOne = monitor.isOver({ shallow: true });\n\n        // You will receive hover() even for items for which canDrop() is false\n        const canDrop = monitor.canDrop();\n    }\n};\n\nexport interface DustbinProps {\n    canDrop: boolean,\n    isOver: boolean,\n    connectDropTarget: ConnectDropTarget,\n}\n\nclass Dustbin extends React.Component<DustbinProps> {\n    render() {\n        const { canDrop, isOver, connectDropTarget } = this.props;\n        const isActive = canDrop && isOver;\n\n        let backgroundColor = '#222';\n        if (isActive) {\n            backgroundColor = 'darkgreen';\n        } else if (canDrop) {\n            backgroundColor = 'darkkhaki';\n        }\n\n        return connectDropTarget(\n            <div style={{ ...style, backgroundColor }}>\n                {isActive ? 'Release to drop' : 'Drag a card here to remove'}\n            </div>,\n        );\n    }\n}\n\nexport default DropTarget(\n    ItemTypes.CARD,\n    cardTarget,\n    (connect: DropTargetConnector, monitor: DropTargetMonitor) => ({\n        connectDropTarget: connect.dropTarget(),\n        isOver: monitor.isOver(),\n        canDrop: monitor.canDrop(),\n    }),\n)(Dustbin);\n","// @flow\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport {\n    DragSource,\n    DropTarget,\n    ConnectDropTarget,\n    ConnectDragSource,\n    DropTargetMonitor,\n    DropTargetConnector,\n    DragSourceConnector,\n    DragSourceMonitor,\n} from 'react-dnd';\nimport ItemTypes from './ItemTypes';\n\nconst style = {\n    border: '1px dashed gray',\n    padding: '0.5rem 1rem',\n    marginBottom: '.5rem',\n    backgroundColor: 'white',\n    cursor: 'move',\n};\n\nconst cardSource = {\n    beginDrag(props: CardProps) {\n        return {\n            id: props.id,\n            index: props.index,\n        };\n    },\n    endDrag(props, monitor, component) {\n        console.log('endDrag props', props);\n        console.log('props', component);\n        if (!monitor.didDrop()) {\n            return;\n        }\n\n        // When dropped on a compatible target, do something\n        const item = monitor.getItem();\n        console.log('item', item);\n        const dropResult = monitor.getDropResult();\n\n        if (dropResult) {\n            console.log('dropResult', dropResult);\n            if (dropResult.name === 'Dustbin') {\n                props.onDropToDustbin();\n            }\n\n            // props.dispatch(removeTodo(item.id));\n            // alert(`You dropped ${item.id} into ${dropResult.name}!`);\n        }\n        // CardActions.moveCardToList(item.id, dropResult.listId);\n    }\n};\n\nconst cardTarget = {\n    hover(props: CardProps, monitor: DropTargetMonitor, component: Card | null) {\n        if (!component) {\n            return null;\n        }\n        const dragIndex = monitor.getItem().index;\n        const hoverIndex = props.index;\n\n        // Don't replace items with themselves\n        if (dragIndex === hoverIndex) {\n            return;\n        }\n\n        // Determine rectangle on screen\n        const hoverBoundingRect = (findDOMNode(\n            component,\n        )).getBoundingClientRect();\n\n        // Get vertical middle\n        const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n        // Determine mouse position\n        const clientOffset = monitor.getClientOffset();\n\n        // Get pixels to the top\n        const hoverClientY = (clientOffset).y - hoverBoundingRect.top;\n\n        // Only perform the move when the mouse has crossed half of the items height\n        // When dragging downwards, only move when the cursor is below 50%\n        // When dragging upwards, only move when the cursor is above 50%\n\n        // Dragging downwards\n        if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n            return;\n        }\n\n        // Dragging upwards\n        if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n            return;\n        }\n\n        // Time to actually perform the action\n        props.moveCard(dragIndex, hoverIndex);\n\n        // Note: we're mutating the monitor item here!\n        // Generally it's better to avoid mutations,\n        // but it's good here for the sake of performance\n        // to avoid expensive index searches.\n        monitor.getItem().index = hoverIndex;\n    },\n};\n\nexport interface CardProps {\n    id: any,\n    text: string,\n    index: number,\n    onClick: () => void,\n    moveCard: (dragIndex: number, hoverIndex: number) => void\n}\n\ninterface CardSourceCollectedProps {\n    isDragging: boolean,\n    connectDragSource: ConnectDragSource\n}\n\ninterface CardTargetCollectedProps {\n    connectDropTarget: ConnectDropTarget\n}\n\nclass Card extends React.Component<\n    CardProps & CardSourceCollectedProps & CardTargetCollectedProps\n    > {\n    render() {\n        const {\n            text,\n            isDragging,\n            connectDragSource,\n            connectDropTarget,\n            onClick,\n            index,\n        } = this.props;\n        const opacity = isDragging ? 0 : 1;\n\n        return connectDragSource(\n            connectDropTarget(\n                <div\n                    onClick={onClick}\n                    style={{\n                        ...style,\n                        cursor: isDragging ? 'grabbing' : 'grab',\n                        opacity\n                    }}\n                >\n                    {index+1} {text}\n                </div>\n            ),\n        );\n    }\n}\n\nexport default DropTarget<CardProps, CardTargetCollectedProps>(\n    ItemTypes.CARD,\n    cardTarget,\n    (connect: DropTargetConnector) => ({\n        connectDropTarget: connect.dropTarget(),\n    }),\n)(\n    DragSource<CardProps, CardSourceCollectedProps>(\n        ItemTypes.CARD,\n        cardSource,\n        (connect: DragSourceConnector, monitor: DragSourceMonitor) => ({\n            connectDragSource: connect.dragSource(),\n            isDragging: monitor.isDragging(),\n        }),\n    )(Card),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import Card from '../dnd/Card';\nimport Card from '../dnd/SortedCard';\n\nconst Todo = ({ onClick, completed, text, id, onDropToDustbin, moveCard, index }) => (\n    <Card\n        onClick={onClick}\n        onDropToDustbin={onDropToDustbin}\n        moveCard={moveCard}\n        style={{\n            textDecoration: completed ? 'line-through' : 'none'\n        }}\n        text={text}\n        id={id}\n        index={index}\n    />\n);\n\nTodo.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    onDropToDustbin: PropTypes.func.isRequired,\n    moveCard: PropTypes.func.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    index: PropTypes.number.isRequired\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodoList = ({ todos, toggleTodo, removeTodo, sortCard }) => (\n    <div>\n        {todos.map((todo, i) => (\n            <Todo\n                key={todo.id}\n                index={i}\n                {...todo}\n                onClick={() => toggleTodo(todo.id)}\n                onDropToDustbin={() => removeTodo(todo.id)}\n                moveCard={(dragIndex, hoverIndex) => sortCard(dragIndex, hoverIndex)}\n            />\n        ))}\n    </div>\n);\n\nTodoList.propTypes = {\n    todos: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            completed: PropTypes.bool.isRequired,\n            text: PropTypes.string.isRequired\n        }).isRequired\n    ).isRequired,\n    toggleTodo: PropTypes.func.isRequired,\n    removeTodo: PropTypes.func.isRequired,\n    sortCard: PropTypes.func.isRequired\n};\n\nexport default TodoList;\n","import { connect } from 'react-redux';\nimport { toggleTodo, removeTodo, sortCard } from '../actions';\nimport TodoList from '../components/TodoList';\nimport { VisibilityFilters } from '../actions';\n\nconst getVisibleTodos = (todos, filter) => {\n    switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n        return todos;\n    case VisibilityFilters.SHOW_COMPLETED:\n        return todos.filter(t => t.completed);\n    case VisibilityFilters.SHOW_ACTIVE:\n        return todos.filter(t => !t.completed);\n    default:\n        throw new Error('Unknown filter: ' + filter);\n    }\n};\n\nconst mapStateToProps = state => ({\n    todos: getVisibleTodos(state.todos, state.visibilityFilter)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    toggleTodo: id => dispatch(toggleTodo(id)),\n    removeTodo: id => dispatch(removeTodo(id)),\n    sortCard: (dragIndex, hoverIndex) => dispatch(sortCard(dragIndex, hoverIndex)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodoList);\n","import React from 'react';\nimport { DragDropContextProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport Dustbin from './Dustbin';\nimport VisibleTodoList from '../containers/VisibleTodoList';\n\nexport default function DnDBoard() {\n    return (\n        <DragDropContextProvider backend={HTML5Backend}>\n            <VisibleTodoList />\n            <Dustbin />\n        </DragDropContextProvider>\n    );\n}\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport AddTodo from './containers/AddTodo';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport DnDBoard from './dnd/DnDBoard';\n\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n`;\n\nclass App extends PureComponent {\n    render() {\n        return (\n            <Container>\n                <Header />\n                <AddTodo />\n                <Footer />\n                <DnDBoard />\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './reducers';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst persistConfig = {\n    // blacklist: ['todos', 'idCounter'],\n    key: 'root',\n    storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(\n    persistedReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n/* eslint-enable */\n\nlet persistor = persistStore(store);\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}